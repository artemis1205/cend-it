{"version":3,"sources":["GoogleSignIn.js","Login.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","GoogleSignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","catch","err","console","error","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","handleLogout","setHasAccount","emailError","passwordError","placeholder","type","autoFocus","required","value","onChange","e","target","style","color","firestore","SignOut","currentUser","signOut","ChatRoom","username","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","today","Date","sendMessage","a","preventDefault","uid","photoURL","add","text","createdAt","now","name","time","getHours","slice","getMinutes","navigator","vibrate","log","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","messageClass","App","user","setUser","setEmailError","setPasswordError","authListener","onAuthStateChanged","useEffect","signInWithEmailAndPassword","code","createUserWithEmailAndPassword","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.225af835.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDbbnI9ZVKSTWiMNC7CIhRnebsKv4Wslcs\",\n  authDomain: \"cend-it.firebaseapp.com\",\n  databaseURL: \"https://cend-it-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"cend-it\",\n  storageBucket: \"cend-it.appspot.com\",\n  messagingSenderId: \"807693819563\",\n  appId: \"1:807693819563:web:9147c7cdd9f6ca5cc8a1ee\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\n\nfunction GoogleSignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).catch(err => {\n      console.error(err);\n    })\n  }\n\n \n\n\n  return (\n    <>\n    <div className='SignUpPage'>\n    \n      <button className='SignInButton' onClick={signInWithGoogle}>Sign in with Google</button>\n\n    \n      </div>\n   </>\n  )\n}\n\nexport default GoogleSignIn;\n","import React from 'react';\nimport './App.css';\nimport GoogleSignIn from \"./GoogleSignIn\";\nconst Login = (props) => {\n\n    const {email, setEmail, password, setPassword, handleLogin, handleSignup, handleLogout, hasAccount, setHasAccount, emailError, passwordError} = props;\n    return (\n\n        <section>\n        <div className=\"logincontainer\">\n           \n            <input placeholder=\"Email\" className=\"Login-Mail\"type=\"text\" autoFocus required value={email }  onChange={(e) => setEmail(e.target.value)}/>\n            <h2></h2>\n        \n            <input placeholder=\"Password\"className=\"Login-Password\" type=\"password\"  required value={password}  onChange={(e) => setPassword(e.target.value)}/>\n            \n            <div className=\"Buttoncontainers\">\n            {hasAccount ?(\n                <>\n                \n                <p>Don't have an account? <span style={{color:\"#5f91e8\"}} onClick={() => setHasAccount(!hasAccount)}>Sign up</span></p>\n                <button className=\"Sign\" onClick={handleLogin}>Sign in</button>\n                </>\n            ): (\n                <>\n                \n                <p>Have an account? <span style={{color:\"#5f91e8\"}} onClick={() => setHasAccount(!hasAccount)}>Sign in</span></p>\n                <button className=\"Sign\" onClick={handleSignup}>Sign up</button>\n                </>\n            )}\n       \n            </div>\n            <GoogleSignIn/>\n            \n        </div>\n        <p className=\"errormsg\">{emailError}</p>\n            <p className=\"errormsg\">{passwordError}</p>\n     \n       \n        </section>\n    )\n}\n\nexport default Login;","import React, { useRef, useState, useEffect } from 'react';\nimport './App.css';\nimport firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport Login from './Login';\nimport { AuthContext } from \"auth-context\";\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDbbnI9ZVKSTWiMNC7CIhRnebsKv4Wslcs\",\n    authDomain: \"cend-it.firebaseapp.com\",\n    databaseURL: \"https://cend-it-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"cend-it\",\n    storageBucket: \"cend-it.appspot.com\",\n    messagingSenderId: \"807693819563\",\n    appId: \"1:807693819563:web:9147c7cdd9f6ca5cc8a1ee\"\n};\n\n\nfirebase.initializeApp(firebaseConfig);\n const auth = firebase.auth();\n const firestore = firebase.firestore()\n\n\nfunction App() {\n\n  const [user, setUser] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail(\"\")\n    setPassword(\"\")\n  }  \n\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  }\n  const handleLogin = () => {\n    clearErrors();\n    \n    firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch(err => {\n      switch(err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break;\n        \n      }\n    })\n  }\n\n  const handleSignup = () => {\n    console.log(email);\n  \n    firebase.auth().createUserWithEmailAndPassword( email, password)\n    .catch(err => {\n      switch(err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n        \n      }\n    })\n  }\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n  }\n\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged((user)=> {\n      if(user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\")\n      }\n    })\n  }\n\n  useEffect(() => {\n    authListener();\n  }, [])\n\n  return(\n    <div>\n      {user ? (\n        <ChatRoom />\n        \n      ): (\n        <>\n        <div className=\"triangle\"></div>\n    <h1 className=\"Title\">CEND-IT</h1>\n        <Login email={email} setEmail={setEmail} password={password} setPassword={setPassword} handleLogin={handleLogin} handleSignup={handleSignup} handleLogout={handleLogout} hasAccount={hasAccount} setHasAccount={setHasAccount} emailError={emailError} passwordError={passwordError}/>  \n        \n</>\n      )}\n      \n    </div>\n  )\n}\n\n\n\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"SignOut\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const uid = auth.currentUser;\n  const username = auth.currentUser.email;\n\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt', 'asc').limit(300);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  const today = new Date();\n\n\n    \n  \n const vibration = () => {\n  const canVibrate = navigator.vibrate\n  if (canVibrate) navigator.vibrate(1000);\n  console.log(\"vibrate\");\n}\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    const {uid, photoURL} = auth.currentUser;\n    \n\n   \n    await messagesRef.add({\n      text: formValue,\n      createdAt: Date.now(),\n      uid, \n      photoURL,\n      name: username,\n      time: (\"0\"+today.getHours()).slice(-2) + ':' + (\"0\"+today.getMinutes()).slice(-2)\n    })\n    \n    setFormValue('');\n    const canVibrate = navigator.vibrate\n    if (canVibrate) navigator.vibrate(1000);\n    console.log(\"vibrate\");\n    \n    dummy.current.scrollIntoView({behavior: 'smooth'});\n   \n  }\n  return (\n    <>\n    <div className=\"top\">\n      <div className=\"flex\">\n      \n    <SignOut />\n    <h1 className=\"chat-title\">Cend-It</h1>\n    </div>\n    </div>\n   \n    \n      <main className=\"Messages\">\n      {messages && messages.map(msg => <ChatMessage  key={msg.id} message={msg} />)}\n      <div ref={dummy}></div>\n      </main> \n<div className=\"bottom\">\n      <form className=\"form\" onSubmit={sendMessage}>\n        <input className=\"input-message\" type=\"text\"  value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n        <button onClick={vibration}className=\"Send\" type='submit'>Send</button>\n      </form>\n      </div>\n    </>\n  )\n}\n\nfunction ChatMessage (props) {\n\n    const {text, uid, photoURL, name, time} = props.message;\n  \n  \n    const messageClass = uid === auth.currentUser.uid?'sent':'received';\n\n    return (\n      <div className={`message ${messageClass}`}>\n       <h2>{name}</h2>\n        <div className=\"text\">\n         \n        <p>{text}</p>\n        </div>\n   <h3>{time}</h3>\n      </div>\n    )\n  }\n\n\n\n\n\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}